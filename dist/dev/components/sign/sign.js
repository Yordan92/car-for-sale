var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);
        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);
        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);
    }
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var angular2_1 = require('angular2/angular2');
var user_1 = require('../../services/user');
var angular2_2 = require('angular2/angular2');
var Sign = (function () {
    function Sign(fb, user) {
        this.user = user;
        this.myForm = fb.group({
            'firstName': ['', angular2_2.Validators.required],
            'lastName': [''],
            'email': ['', angular2_2.Validators.required],
            'pass': ['', angular2_2.Validators.required],
            're-pass': ['', angular2_2.Validators.required]
        });
    }
    Sign.prototype.submitUser = function (arg) {
        if (arg.valid && arg.value.pass === arg.value['re-pass']) {
            this.user.registrate(arg.value);
        }
    };
    Sign = __decorate([
        angular2_1.Component({
            selector: 'sign',
            viewBindings: [angular2_2.FormBuilder]
        }),
        angular2_1.View({
            directives: [angular2_2.FORM_DIRECTIVES, angular2_1.NgIf],
            template: "\n    <h1>Sign Up </h1>\n    <form class=\"top-bar flex-rows\" [ng-form-model]=\"myForm\" (ng-submit)=\"submitUser(myForm)\">\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">First Name</span>\n    \t\t<input  [ng-form-control]=\"myForm.controls['firstName']\" class=\"flex-fill\" type=\"text\"/>\n    \t</div>\n    \t<div  *ng-if=\"!myForm.controls['firstName'].valid && myForm.controls['firstName'].touched\" class=\"ui error message\" style=\"color: red\">First Name must not be null\n    \t</div>\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">Last Name</span>\n    \t\t<input  [ng-form-control]=\"myForm.controls['lastName']\" class=\"flex-fill\" type=\"text\"/>\n    \t</div>\n\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">email</span>\n    \t\t<input  [ng-form-control]=\"myForm.controls['email']\" class=\"flex-fill\" type=\"text\"/>\n    \t</div>\n\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">Password</span>\n    \t\t<input #passinput [ng-form-control]=\"myForm.controls['pass']\"  class=\"flex-fill\" type=\"password\">\n    \t</div>\n    \t<div  *ng-if=\"!myForm.controls['pass'].valid && myForm.controls['pass'].touched\" class=\"ui error message\" style=\"color: red\">Password must not be  null\n    \t</div>\n\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">Re Password</span>\n    \t\t<input  [ng-form-control]=\"myForm.controls['re-pass']\" class=\"flex-fill\" type=\"password\">\n    \t</div>\n    \t<div  *ng-if=\"!myForm.controls['re-pass'].valid && myForm.controls['re-pass'].touched\" class=\"ui error message\" style=\"color: red\">Re password must not be null\n    \t</div>\n \n    <input type=\"submit\"/>\n    <button>Close</button>\n    </form>\n\t\t",
            styles: ["\n\n\t    "]
        }), 
        __metadata('design:paramtypes', [angular2_2.FormBuilder, user_1.User])
    ], Sign);
    return Sign;
})();
exports.Sign = Sign;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvc2lnbi9zaWduLnRzIl0sIm5hbWVzIjpbIlNpZ24iLCJTaWduLmNvbnN0cnVjdG9yIiwiU2lnbi5zdWJtaXRVc2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLHlCQUFvQyxtQkFBbUIsQ0FBQyxDQUFBO0FBQ3hELHFCQUFtQixxQkFBcUIsQ0FBQyxDQUFBO0FBQ3pDLHlCQUFzRSxtQkFBbUIsQ0FBQyxDQUFBO0FBQzFGO0lBb0RDQSxjQUFZQSxFQUFlQSxFQUFTQSxJQUFVQTtRQUFWQyxTQUFJQSxHQUFKQSxJQUFJQSxDQUFNQTtRQUMxQ0EsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0EsRUFBRUEsQ0FBQ0EsS0FBS0EsQ0FBQ0E7WUFDekJBLFdBQVdBLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLHFCQUFVQSxDQUFDQSxRQUFRQSxDQUFDQTtZQUN0Q0EsVUFBVUEsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0E7WUFDaEJBLE9BQU9BLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLHFCQUFVQSxDQUFDQSxRQUFRQSxDQUFDQTtZQUNsQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEscUJBQVVBLENBQUNBLFFBQVFBLENBQUNBO1lBQ2pDQSxTQUFTQSxFQUFFQSxDQUFDQSxFQUFFQSxFQUFFQSxxQkFBVUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7U0FDcENBLENBQUNBLENBQUNBO0lBQ0pBLENBQUNBO0lBRURELHlCQUFVQSxHQUFWQSxVQUFXQSxHQUFHQTtRQUNiRSxFQUFFQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxLQUFLQSxJQUFJQSxHQUFHQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxLQUFLQSxHQUFHQSxDQUFDQSxLQUFLQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUMxREEsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsQ0FBQ0E7UUFDakNBLENBQUNBO0lBQ0ZBLENBQUNBO0lBbEVGRjtRQUFDQSxvQkFBU0EsQ0FBQ0E7WUFDVkEsUUFBUUEsRUFBRUEsTUFBTUE7WUFDaEJBLFlBQVlBLEVBQUVBLENBQUNBLHNCQUFXQSxDQUFDQTtTQUMzQkEsQ0FBQ0E7UUFFREEsZUFBSUEsQ0FBQ0E7WUFDSkEsVUFBVUEsRUFBRUEsQ0FBQ0EsMEJBQWVBLEVBQUVBLGVBQUlBLENBQUNBO1lBQ25DQSxRQUFRQSxFQUFFQSxteURBb0NUQTtZQUNFQSxNQUFNQSxFQUFFQSxDQUFDQSxZQUVSQSxDQUFDQTtTQUNOQSxDQUFDQTs7YUFvQkRBO0lBQURBLFdBQUNBO0FBQURBLENBbkVBLEFBbUVDQSxJQUFBO0FBbEJZLFlBQUksT0FrQmhCLENBQUEiLCJmaWxlIjoiY29tcG9uZW50cy9zaWduL3NpZ24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgVmlldywgTmdJZn0gZnJvbSAnYW5ndWxhcjIvYW5ndWxhcjInO1xuaW1wb3J0IHtVc2VyfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy91c2VyJztcbmltcG9ydCB7IEZPUk1fRElSRUNUSVZFUywgRm9ybUJ1aWxkZXIsIENvbnRyb2xHcm91cCwgVmFsaWRhdG9yc30gZnJvbSAnYW5ndWxhcjIvYW5ndWxhcjInO1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnc2lnbicsXG5cdHZpZXdCaW5kaW5nczogW0Zvcm1CdWlsZGVyXVxufSlcblxuQFZpZXcoe1xuXHRcdGRpcmVjdGl2ZXM6IFtGT1JNX0RJUkVDVElWRVMsIE5nSWZdLFxuXHRcdHRlbXBsYXRlOiBgXG4gICAgPGgxPlNpZ24gVXAgPC9oMT5cbiAgICA8Zm9ybSBjbGFzcz1cInRvcC1iYXIgZmxleC1yb3dzXCIgW25nLWZvcm0tbW9kZWxdPVwibXlGb3JtXCIgKG5nLXN1Ym1pdCk9XCJzdWJtaXRVc2VyKG15Rm9ybSlcIj5cbiAgICBcdDxkaXYgY2xhc3M9XCJmbGV4LWZpbGwgdG9wLWJhclwiPlxuICAgIFx0XHQ8c3BhbiBjbGFzcz1cImZsZXgtZmlsbFwiPkZpcnN0IE5hbWU8L3NwYW4+XG4gICAgXHRcdDxpbnB1dCAgW25nLWZvcm0tY29udHJvbF09XCJteUZvcm0uY29udHJvbHNbJ2ZpcnN0TmFtZSddXCIgY2xhc3M9XCJmbGV4LWZpbGxcIiB0eXBlPVwidGV4dFwiLz5cbiAgICBcdDwvZGl2PlxuICAgIFx0PGRpdiAgKm5nLWlmPVwiIW15Rm9ybS5jb250cm9sc1snZmlyc3ROYW1lJ10udmFsaWQgJiYgbXlGb3JtLmNvbnRyb2xzWydmaXJzdE5hbWUnXS50b3VjaGVkXCIgY2xhc3M9XCJ1aSBlcnJvciBtZXNzYWdlXCIgc3R5bGU9XCJjb2xvcjogcmVkXCI+Rmlyc3QgTmFtZSBtdXN0IG5vdCBiZSBudWxsXG4gICAgXHQ8L2Rpdj5cbiAgICBcdDxkaXYgY2xhc3M9XCJmbGV4LWZpbGwgdG9wLWJhclwiPlxuICAgIFx0XHQ8c3BhbiBjbGFzcz1cImZsZXgtZmlsbFwiPkxhc3QgTmFtZTwvc3Bhbj5cbiAgICBcdFx0PGlucHV0ICBbbmctZm9ybS1jb250cm9sXT1cIm15Rm9ybS5jb250cm9sc1snbGFzdE5hbWUnXVwiIGNsYXNzPVwiZmxleC1maWxsXCIgdHlwZT1cInRleHRcIi8+XG4gICAgXHQ8L2Rpdj5cblxuICAgIFx0PGRpdiBjbGFzcz1cImZsZXgtZmlsbCB0b3AtYmFyXCI+XG4gICAgXHRcdDxzcGFuIGNsYXNzPVwiZmxleC1maWxsXCI+ZW1haWw8L3NwYW4+XG4gICAgXHRcdDxpbnB1dCAgW25nLWZvcm0tY29udHJvbF09XCJteUZvcm0uY29udHJvbHNbJ2VtYWlsJ11cIiBjbGFzcz1cImZsZXgtZmlsbFwiIHR5cGU9XCJ0ZXh0XCIvPlxuICAgIFx0PC9kaXY+XG5cbiAgICBcdDxkaXYgY2xhc3M9XCJmbGV4LWZpbGwgdG9wLWJhclwiPlxuICAgIFx0XHQ8c3BhbiBjbGFzcz1cImZsZXgtZmlsbFwiPlBhc3N3b3JkPC9zcGFuPlxuICAgIFx0XHQ8aW5wdXQgI3Bhc3NpbnB1dCBbbmctZm9ybS1jb250cm9sXT1cIm15Rm9ybS5jb250cm9sc1sncGFzcyddXCIgIGNsYXNzPVwiZmxleC1maWxsXCIgdHlwZT1cInBhc3N3b3JkXCI+XG4gICAgXHQ8L2Rpdj5cbiAgICBcdDxkaXYgICpuZy1pZj1cIiFteUZvcm0uY29udHJvbHNbJ3Bhc3MnXS52YWxpZCAmJiBteUZvcm0uY29udHJvbHNbJ3Bhc3MnXS50b3VjaGVkXCIgY2xhc3M9XCJ1aSBlcnJvciBtZXNzYWdlXCIgc3R5bGU9XCJjb2xvcjogcmVkXCI+UGFzc3dvcmQgbXVzdCBub3QgYmUgIG51bGxcbiAgICBcdDwvZGl2PlxuXG4gICAgXHQ8ZGl2IGNsYXNzPVwiZmxleC1maWxsIHRvcC1iYXJcIj5cbiAgICBcdFx0PHNwYW4gY2xhc3M9XCJmbGV4LWZpbGxcIj5SZSBQYXNzd29yZDwvc3Bhbj5cbiAgICBcdFx0PGlucHV0ICBbbmctZm9ybS1jb250cm9sXT1cIm15Rm9ybS5jb250cm9sc1sncmUtcGFzcyddXCIgY2xhc3M9XCJmbGV4LWZpbGxcIiB0eXBlPVwicGFzc3dvcmRcIj5cbiAgICBcdDwvZGl2PlxuICAgIFx0PGRpdiAgKm5nLWlmPVwiIW15Rm9ybS5jb250cm9sc1sncmUtcGFzcyddLnZhbGlkICYmIG15Rm9ybS5jb250cm9sc1sncmUtcGFzcyddLnRvdWNoZWRcIiBjbGFzcz1cInVpIGVycm9yIG1lc3NhZ2VcIiBzdHlsZT1cImNvbG9yOiByZWRcIj5SZSBwYXNzd29yZCBtdXN0IG5vdCBiZSBudWxsXG4gICAgXHQ8L2Rpdj5cbiBcbiAgICA8aW5wdXQgdHlwZT1cInN1Ym1pdFwiLz5cbiAgICA8YnV0dG9uPkNsb3NlPC9idXR0b24+XG4gICAgPC9mb3JtPlxuXHRcdGAsXG5cdCAgICBzdHlsZXM6IFtgXG5cblx0ICAgIGBdXG59KVxuLy8gQENhbkFjdGl2YXRlKChuZXh0LCBwcmV2KSA9PiB7IGNvbnNvbGUubG9nKG5leHQsIHByZXYpO3JldHVybiBmYWxzZTt9KVxuZXhwb3J0IGNsYXNzIFNpZ24ge1xuXHRteUZvcm06IENvbnRyb2xHcm91cDtcblxuXHRjb25zdHJ1Y3RvcihmYjogRm9ybUJ1aWxkZXIsIHB1YmxpYyB1c2VyOiBVc2VyKSB7XG4gICAgXHR0aGlzLm15Rm9ybSA9IGZiLmdyb3VwKHtcblx0XHRcdCdmaXJzdE5hbWUnOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxuXHRcdFx0J2xhc3ROYW1lJzogWycnXSxcblx0XHRcdCdlbWFpbCc6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXG5cdFx0XHQncGFzcyc6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXG5cdFx0XHQncmUtcGFzcyc6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF1cblx0XHR9KTtcblx0fVxuXG5cdHN1Ym1pdFVzZXIoYXJnKTogdm9pZCB7XG5cdFx0aWYgKGFyZy52YWxpZCAmJiBhcmcudmFsdWUucGFzcyA9PT0gYXJnLnZhbHVlWydyZS1wYXNzJ10pIHtcblx0XHRcdHRoaXMudXNlci5yZWdpc3RyYXRlKGFyZy52YWx1ZSk7XG5cdFx0fVxuXHR9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=