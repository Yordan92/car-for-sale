var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);
        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);
        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);
    }
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var angular2_1 = require('angular2/angular2');
var user_1 = require('../../services/user');
var angular2_2 = require('angular2/angular2');
var Sign = (function () {
    function Sign(fb, user) {
        this.user = user;
        var self = this;
        this.myForm = fb.group({
            'firstName': ['', angular2_2.Validators.required],
            'lastName': [''],
            'email': ['', angular2_2.Validators.required],
            'pass': ['', angular2_2.Validators.required],
            're-pass': ['', angular2_2.Validators.required]
        });
        console.log(this.myForm);
    }
    Sign.prototype.submitUser = function (arg) {
        if (arg.valid && arg.value.pass === arg.value['re-pass']) {
            this.user.registrate(arg.value);
        }
    };
    Sign = __decorate([
        angular2_1.Component({
            selector: 'sign',
            viewBindings: [angular2_2.FormBuilder]
        }),
        angular2_1.View({
            directives: [angular2_2.FORM_DIRECTIVES, angular2_1.NgIf],
            template: "\n    <h1>Sign Up </h1>\n    <form class=\"top-bar flex-rows\" [ng-form-model]=\"myForm\" (ng-submit)=\"submitUser(myForm)\">\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">First Name</span>\n    \t\t<input  [ng-form-control]=\"myForm.controls['firstName']\" class=\"flex-fill\" type=\"text\"/>\n    \t</div>\n    \t<div  *ng-if=\"!myForm.controls['firstName'].valid && myForm.controls['firstName'].touched\" class=\"ui error message\" style=\"color: red\">First Name must not be null\n    \t</div>\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">Last Name</span>\n    \t\t<input  [ng-form-control]=\"myForm.controls['lastName']\" class=\"flex-fill\" type=\"text\"/>\n    \t</div>\n\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">email</span>\n    \t\t<input  [ng-form-control]=\"myForm.controls['email']\" class=\"flex-fill\" type=\"text\"/>\n    \t</div>\n\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">Password</span>\n    \t\t<input #passinput [ng-form-control]=\"myForm.controls['pass']\"  class=\"flex-fill\" type=\"password\">\n    \t</div>\n    \t<div  *ng-if=\"!myForm.controls['pass'].valid && myForm.controls['pass'].touched\" class=\"ui error message\" style=\"color: red\">Password must not be  null\n    \t</div>\n\n    \t<div class=\"flex-fill top-bar\">\n    \t\t<span class=\"flex-fill\">Re Password</span>\n    \t\t<input  [ng-form-control]=\"myForm.controls['re-pass']\" class=\"flex-fill\" type=\"password\">\n    \t</div>\n    \t<div  *ng-if=\"!myForm.controls['re-pass'].valid && myForm.controls['re-pass'].touched\" class=\"ui error message\" style=\"color: red\">Re password must not be null\n    \t</div>\n \n    <input type=\"submit\"/>\n    <button>Close</button>\n    </form>\n\t\t",
            styles: ["\n\n\t    "]
        }), 
        __metadata('design:paramtypes', [angular2_2.FormBuilder, user_1.User])
    ], Sign);
    return Sign;
})();
exports.Sign = Sign;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvc2lnbi9zaWduLnRzIl0sIm5hbWVzIjpbIlNpZ24iLCJTaWduLmNvbnN0cnVjdG9yIiwiU2lnbi5zdWJtaXRVc2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLHlCQUFvQyxtQkFBbUIsQ0FBQyxDQUFBO0FBRXhELHFCQUFtQixxQkFBcUIsQ0FBQyxDQUFBO0FBRXpDLHlCQUFzRSxtQkFBbUIsQ0FBQyxDQUFBO0FBQzFGO0lBb0RDQSxjQUFZQSxFQUFlQSxFQUFTQSxJQUFVQTtRQUFWQyxTQUFJQSxHQUFKQSxJQUFJQSxDQUFNQTtRQUM3Q0EsSUFBSUEsSUFBSUEsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFDYkEsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0EsRUFBRUEsQ0FBQ0EsS0FBS0EsQ0FBQ0E7WUFDekJBLFdBQVdBLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLHFCQUFVQSxDQUFDQSxRQUFRQSxDQUFDQTtZQUN0Q0EsVUFBVUEsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0E7WUFDaEJBLE9BQU9BLEVBQUVBLENBQUNBLEVBQUVBLEVBQUVBLHFCQUFVQSxDQUFDQSxRQUFRQSxDQUFDQTtZQUNsQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEscUJBQVVBLENBQUNBLFFBQVFBLENBQUNBO1lBQ2pDQSxTQUFTQSxFQUFFQSxDQUFDQSxFQUFFQSxFQUFFQSxxQkFBVUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7U0FDcENBLENBQUNBLENBQUNBO1FBRUhBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBO0lBQzFCQSxDQUFDQTtJQUVERCx5QkFBVUEsR0FBVkEsVUFBV0EsR0FBR0E7UUFDYkUsRUFBRUEsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsS0FBS0EsSUFBSUEsR0FBR0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsS0FBS0EsR0FBR0EsQ0FBQ0EsS0FBS0EsQ0FBQ0EsU0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDMURBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLEdBQUdBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO1FBQ2pDQSxDQUFDQTtJQUNGQSxDQUFDQTtJQXJFRkY7UUFBQ0Esb0JBQVNBLENBQUNBO1lBQ1ZBLFFBQVFBLEVBQUVBLE1BQU1BO1lBQ2hCQSxZQUFZQSxFQUFFQSxDQUFDQSxzQkFBV0EsQ0FBQ0E7U0FDM0JBLENBQUNBO1FBRURBLGVBQUlBLENBQUNBO1lBQ0pBLFVBQVVBLEVBQUVBLENBQUNBLDBCQUFlQSxFQUFFQSxlQUFJQSxDQUFDQTtZQUNuQ0EsUUFBUUEsRUFBRUEsbXlEQW9DVEE7WUFDRUEsTUFBTUEsRUFBRUEsQ0FBQ0EsWUFFUkEsQ0FBQ0E7U0FDTkEsQ0FBQ0E7O2FBdUJEQTtJQUFEQSxXQUFDQTtBQUFEQSxDQXRFQSxBQXNFQ0EsSUFBQTtBQXJCWSxZQUFJLE9BcUJoQixDQUFBIiwiZmlsZSI6ImNvbXBvbmVudHMvc2lnbi9zaWduLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXcsIE5nSWZ9IGZyb20gJ2FuZ3VsYXIyL2FuZ3VsYXIyJztcbmltcG9ydCB7Um91dGVDb25maWcsIFJPVVRFUl9ESVJFQ1RJVkVTfSBmcm9tICdhbmd1bGFyMi9yb3V0ZXInO1xuaW1wb3J0IHtVc2VyfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy91c2VyJztcbi8vIGltcG9ydCB7U2lnblZhbGlkYXRvcnN9IGZyb20gJ3ZhbGlkYXRvcnMvc2lnblZhbGlkYXRvcnMnO1xuaW1wb3J0IHsgRk9STV9ESVJFQ1RJVkVTLCBGb3JtQnVpbGRlciwgQ29udHJvbEdyb3VwLCBWYWxpZGF0b3JzfSBmcm9tICdhbmd1bGFyMi9hbmd1bGFyMic7XG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdzaWduJyxcblx0dmlld0JpbmRpbmdzOiBbRm9ybUJ1aWxkZXJdXG59KVxuXG5AVmlldyh7XG5cdFx0ZGlyZWN0aXZlczogW0ZPUk1fRElSRUNUSVZFUywgTmdJZl0sXG5cdFx0dGVtcGxhdGU6IGBcbiAgICA8aDE+U2lnbiBVcCA8L2gxPlxuICAgIDxmb3JtIGNsYXNzPVwidG9wLWJhciBmbGV4LXJvd3NcIiBbbmctZm9ybS1tb2RlbF09XCJteUZvcm1cIiAobmctc3VibWl0KT1cInN1Ym1pdFVzZXIobXlGb3JtKVwiPlxuICAgIFx0PGRpdiBjbGFzcz1cImZsZXgtZmlsbCB0b3AtYmFyXCI+XG4gICAgXHRcdDxzcGFuIGNsYXNzPVwiZmxleC1maWxsXCI+Rmlyc3QgTmFtZTwvc3Bhbj5cbiAgICBcdFx0PGlucHV0ICBbbmctZm9ybS1jb250cm9sXT1cIm15Rm9ybS5jb250cm9sc1snZmlyc3ROYW1lJ11cIiBjbGFzcz1cImZsZXgtZmlsbFwiIHR5cGU9XCJ0ZXh0XCIvPlxuICAgIFx0PC9kaXY+XG4gICAgXHQ8ZGl2ICAqbmctaWY9XCIhbXlGb3JtLmNvbnRyb2xzWydmaXJzdE5hbWUnXS52YWxpZCAmJiBteUZvcm0uY29udHJvbHNbJ2ZpcnN0TmFtZSddLnRvdWNoZWRcIiBjbGFzcz1cInVpIGVycm9yIG1lc3NhZ2VcIiBzdHlsZT1cImNvbG9yOiByZWRcIj5GaXJzdCBOYW1lIG11c3Qgbm90IGJlIG51bGxcbiAgICBcdDwvZGl2PlxuICAgIFx0PGRpdiBjbGFzcz1cImZsZXgtZmlsbCB0b3AtYmFyXCI+XG4gICAgXHRcdDxzcGFuIGNsYXNzPVwiZmxleC1maWxsXCI+TGFzdCBOYW1lPC9zcGFuPlxuICAgIFx0XHQ8aW5wdXQgIFtuZy1mb3JtLWNvbnRyb2xdPVwibXlGb3JtLmNvbnRyb2xzWydsYXN0TmFtZSddXCIgY2xhc3M9XCJmbGV4LWZpbGxcIiB0eXBlPVwidGV4dFwiLz5cbiAgICBcdDwvZGl2PlxuXG4gICAgXHQ8ZGl2IGNsYXNzPVwiZmxleC1maWxsIHRvcC1iYXJcIj5cbiAgICBcdFx0PHNwYW4gY2xhc3M9XCJmbGV4LWZpbGxcIj5lbWFpbDwvc3Bhbj5cbiAgICBcdFx0PGlucHV0ICBbbmctZm9ybS1jb250cm9sXT1cIm15Rm9ybS5jb250cm9sc1snZW1haWwnXVwiIGNsYXNzPVwiZmxleC1maWxsXCIgdHlwZT1cInRleHRcIi8+XG4gICAgXHQ8L2Rpdj5cblxuICAgIFx0PGRpdiBjbGFzcz1cImZsZXgtZmlsbCB0b3AtYmFyXCI+XG4gICAgXHRcdDxzcGFuIGNsYXNzPVwiZmxleC1maWxsXCI+UGFzc3dvcmQ8L3NwYW4+XG4gICAgXHRcdDxpbnB1dCAjcGFzc2lucHV0IFtuZy1mb3JtLWNvbnRyb2xdPVwibXlGb3JtLmNvbnRyb2xzWydwYXNzJ11cIiAgY2xhc3M9XCJmbGV4LWZpbGxcIiB0eXBlPVwicGFzc3dvcmRcIj5cbiAgICBcdDwvZGl2PlxuICAgIFx0PGRpdiAgKm5nLWlmPVwiIW15Rm9ybS5jb250cm9sc1sncGFzcyddLnZhbGlkICYmIG15Rm9ybS5jb250cm9sc1sncGFzcyddLnRvdWNoZWRcIiBjbGFzcz1cInVpIGVycm9yIG1lc3NhZ2VcIiBzdHlsZT1cImNvbG9yOiByZWRcIj5QYXNzd29yZCBtdXN0IG5vdCBiZSAgbnVsbFxuICAgIFx0PC9kaXY+XG5cbiAgICBcdDxkaXYgY2xhc3M9XCJmbGV4LWZpbGwgdG9wLWJhclwiPlxuICAgIFx0XHQ8c3BhbiBjbGFzcz1cImZsZXgtZmlsbFwiPlJlIFBhc3N3b3JkPC9zcGFuPlxuICAgIFx0XHQ8aW5wdXQgIFtuZy1mb3JtLWNvbnRyb2xdPVwibXlGb3JtLmNvbnRyb2xzWydyZS1wYXNzJ11cIiBjbGFzcz1cImZsZXgtZmlsbFwiIHR5cGU9XCJwYXNzd29yZFwiPlxuICAgIFx0PC9kaXY+XG4gICAgXHQ8ZGl2ICAqbmctaWY9XCIhbXlGb3JtLmNvbnRyb2xzWydyZS1wYXNzJ10udmFsaWQgJiYgbXlGb3JtLmNvbnRyb2xzWydyZS1wYXNzJ10udG91Y2hlZFwiIGNsYXNzPVwidWkgZXJyb3IgbWVzc2FnZVwiIHN0eWxlPVwiY29sb3I6IHJlZFwiPlJlIHBhc3N3b3JkIG11c3Qgbm90IGJlIG51bGxcbiAgICBcdDwvZGl2PlxuIFxuICAgIDxpbnB1dCB0eXBlPVwic3VibWl0XCIvPlxuICAgIDxidXR0b24+Q2xvc2U8L2J1dHRvbj5cbiAgICA8L2Zvcm0+XG5cdFx0YCxcblx0ICAgIHN0eWxlczogW2BcblxuXHQgICAgYF1cbn0pXG4vLyBAQ2FuQWN0aXZhdGUoKG5leHQsIHByZXYpID0+IHsgY29uc29sZS5sb2cobmV4dCwgcHJldik7cmV0dXJuIGZhbHNlO30pXG5leHBvcnQgY2xhc3MgU2lnbiB7XG5cdG15Rm9ybTogQ29udHJvbEdyb3VwO1xuXG5cdGNvbnN0cnVjdG9yKGZiOiBGb3JtQnVpbGRlciwgcHVibGljIHVzZXI6IFVzZXIpIHsgIFxuXHRcdGxldCBzZWxmID0gdGhpcztcbiAgICBcdHRoaXMubXlGb3JtID0gZmIuZ3JvdXAoeyAgXG5cdFx0XHQnZmlyc3ROYW1lJzogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcblx0XHRcdCdsYXN0TmFtZSc6IFsnJ10sXG5cdFx0XHQnZW1haWwnOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxuXHRcdFx0J3Bhc3MnOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxuXHRcdFx0J3JlLXBhc3MnOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdXG5cdFx0fSk7XG5cdFx0Ly8gdGhpcy5teUZvcm0udmFsaWRhdG9yID0gdGhpcy5teUZvcm0udmFsaWRhdG9yXG5cdFx0Y29uc29sZS5sb2codGhpcy5teUZvcm0pO1xuXHR9XG5cblx0c3VibWl0VXNlcihhcmcpOiB2b2lkIHtcblx0XHRpZiAoYXJnLnZhbGlkICYmIGFyZy52YWx1ZS5wYXNzID09PSBhcmcudmFsdWVbJ3JlLXBhc3MnXSkge1xuXHRcdFx0dGhpcy51c2VyLnJlZ2lzdHJhdGUoYXJnLnZhbHVlKTtcblx0XHR9XG5cdH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==